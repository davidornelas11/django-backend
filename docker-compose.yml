services:
  # Django web application
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
      - db
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery worker
  celery:
    build: .
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
      - db
    command: celery -A core worker --loglevel=info

  # Celery beat (for scheduled tasks)
  celery-beat:
    build: .
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - redis
      - db
    command: celery -A core beat --loglevel=info

  # Redis for Celery broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=meal_planning
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  redis_data:
  postgres_data: 